name: Documentation, Examples

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:

jobs:
  sync-jupyter:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        julia-version: ['1.6']
        julia-arch: [x64]
        os: [ubuntu-latest]
        experimental: [false]

    steps:
    - name: "Check out repository"
      uses: actions/checkout@v2
    
    - name: "Set up Julia"  
      uses: julia-actions/setup-julia@v1
      with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}

    - name: "Build package"
      uses: julia-actions/julia-buildpkg@v1
    
    - name: "Set path filter"
      uses: dorny/paths-filter@v2
      id: filter
      with:
        list-files: shell
        filters: |
            example:
                - added|modified: '**.ipynb'
 
    - name: "Install Packages"
      if: ${{ steps.filter.outputs.example == 'true' }}
      run: |
        pip install jupyter==1.0.0 nbconvert==6.4.5 MarkupSafe==2.1.1 jinja2==3.1.1
        julia --project=example/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'

    - name: "Execute changed files"
      if: ${{ steps.filter.outputs.example == 'true' }}
      run: |
        jupyter nbconvert --ExecutePreprocessor.kernel_name="julia-1.6" --to notebook --inplace --execute ${{ steps.filter.outputs.example_files }}
 
    - name: "Synch changed files"
      if: ${{ steps.filter.outputs.example == 'true' }}
      run: |
        jupyter nbconvert --to script ${{ steps.filter.outputs.example_files }}
        jupyter nbconvert --output-dir='./docs/src/examples' --to markdown ${{ steps.filter.outputs.example_files }}

    - name: "Auto commit"
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Jupyter nbconvert synch - modified, paired .ipynb files
        
  build:
    needs: sync-jupyter
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        julia-version: ['1.6']
        julia-arch: [x64]
        os: [ubuntu-latest]
        experimental: [false]
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v2

      - name: "Set up Julia"  
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}

      - name: "Install dependencies"
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'

      - name: "Build and deploy"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # For authentication with SSH deploy key
        run: julia --project=docs/ docs/make.jl
